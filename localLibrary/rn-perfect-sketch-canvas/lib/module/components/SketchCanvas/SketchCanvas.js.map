{"version":3,"names":["Canvas","Path","useCanvasRef","useTouchHandler","React","forwardRef","useEffect","useImperativeHandle","useMemo","drawingState","derivedPaths","useSnapshot","createHistoryStack","createSvgFromPaths","ImageFormat","STROKE_COLOR","STROKE_STYLE","STROKE_WIDTH","SketchCanvas","ref","strokeWidth","strokeColor","strokeStyle","containerStyle","children","topChildren","bottomChildren","pathsSnapshot","canvasRef","stack","currentPoints","completedPoints","width","reset","points","push","undo","value","redo","toBase64","format","quality","image","current","makeImageSnapshot","encodeToBase64","PNG","undefined","toImage","toSvg","height","backgroundColor","completed","toPoints","map","p","addPoints","style","formatted","data","id","Date","now","color","touchHandler","onStart","touchInfo","isDrawing","x","y","onActive","onEnd","timestamp","path"],"sources":["SketchCanvas.tsx"],"sourcesContent":["import {\n  Canvas,\n  Path,\n  TouchInfo,\n  useCanvasRef,\n  useTouchHandler,\n} from '@shopify/react-native-skia';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { drawingState, derivedPaths } from '../../store';\nimport { useSnapshot } from 'valtio';\nimport { createHistoryStack, createSvgFromPaths } from '../../utils';\nimport type {\n  SketchCanvasRef,\n  SketchCanvasProps,\n  Point,\n  StyleOptions,\n} from './types';\nimport { ImageFormat } from './types';\nimport { STROKE_COLOR, STROKE_STYLE, STROKE_WIDTH } from './constants';\n\nexport const SketchCanvas = forwardRef<SketchCanvasRef, SketchCanvasProps>(\n  (\n    {\n      strokeWidth = STROKE_WIDTH,\n      strokeColor = STROKE_COLOR,\n      strokeStyle = STROKE_STYLE,\n      containerStyle,\n      children,\n      topChildren,\n      bottomChildren,\n    },\n    ref\n  ) => {\n    const pathsSnapshot = useSnapshot(derivedPaths);\n    const canvasRef = useCanvasRef();\n    const stack = useMemo(\n      () =>\n        createHistoryStack({\n          currentPoints: drawingState.currentPoints,\n          completedPoints: drawingState.completedPoints,\n        }),\n      []\n    );\n\n    useEffect(() => {\n      drawingState.currentPoints.width = strokeWidth;\n    }, [strokeWidth]);\n\n    useImperativeHandle(ref, () => ({\n      reset() {\n        drawingState.currentPoints.points = null;\n        drawingState.completedPoints = [];\n        stack.push({\n          currentPoints: drawingState.currentPoints,\n          completedPoints: drawingState.completedPoints,\n        });\n      },\n      undo() {\n        const value = stack.undo();\n        drawingState.currentPoints = value.currentPoints;\n        drawingState.completedPoints = value.completedPoints;\n      },\n      redo() {\n        const value = stack.redo();\n        drawingState.currentPoints = value.currentPoints;\n        drawingState.completedPoints = value.completedPoints;\n      },\n      toBase64: (format, quality) => {\n        const image = canvasRef.current?.makeImageSnapshot();\n        if (image) {\n          return image.encodeToBase64(\n            // @ts-expect-error: Internal\n            format ?? ImageFormat.PNG,\n            quality ?? 100\n          );\n        }\n        return undefined;\n      },\n      toImage: () => {\n        return canvasRef.current?.makeImageSnapshot();\n      },\n      toSvg: (width, height, backgroundColor) => {\n        return createSvgFromPaths(derivedPaths.completed, {\n          width,\n          height,\n          backgroundColor,\n        });\n      },\n      toPoints: () => {\n        return drawingState.completedPoints.map((p) => p.points);\n      },\n      addPoints: (points: Point[][], style?: StyleOptions) => {\n        const formatted = points.map((data) => ({\n          id: Date.now(),\n          points: data,\n          color: style?.strokeColor ?? STROKE_COLOR,\n          width: style?.strokeWidth ?? STROKE_WIDTH,\n          style: style?.strokeStyle ?? STROKE_STYLE,\n        }));\n        drawingState.completedPoints = formatted;\n      },\n    }));\n\n    const touchHandler = useTouchHandler(\n      {\n        onStart: (touchInfo: TouchInfo) => {\n          drawingState.isDrawing = true;\n          drawingState.currentPoints.points = [[touchInfo.x, touchInfo.y]];\n        },\n        onActive: (touchInfo: TouchInfo) => {\n          if (!drawingState.isDrawing) {\n            return;\n          }\n\n          drawingState.currentPoints.points = [\n            ...(drawingState.currentPoints.points ?? []),\n            [touchInfo.x, touchInfo.y],\n          ];\n        },\n        onEnd: (touchInfo: TouchInfo) => {\n          drawingState.isDrawing = false;\n\n          if (!drawingState.currentPoints.points) {\n            return;\n          }\n\n          drawingState.completedPoints = [\n            ...drawingState.completedPoints,\n            {\n              id: touchInfo.timestamp,\n              points: drawingState.currentPoints.points,\n              width: drawingState.currentPoints.width,\n              color: strokeColor,\n              style: strokeStyle,\n            },\n          ];\n          drawingState.currentPoints.points = null;\n\n          stack.push({\n            currentPoints: drawingState.currentPoints,\n            completedPoints: drawingState.completedPoints,\n          });\n        },\n      },\n      [strokeColor, strokeStyle]\n    );\n\n    return (\n      <Canvas ref={canvasRef} onTouch={touchHandler} style={containerStyle}>\n        {bottomChildren}\n        {children}\n        {pathsSnapshot.completed.map((path) => (\n          <Path\n            path={path.path}\n            key={path.id}\n            style={path.style}\n            color={path.color}\n          />\n        ))}\n        {pathsSnapshot.current ? (\n          <Path\n            path={pathsSnapshot.current}\n            color={strokeColor}\n            style={strokeStyle}\n          />\n        ) : (\n          <></>\n        )}\n        {topChildren}\n      </Canvas>\n    );\n  }\n);\n"],"mappings":"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"}